#!/bin/bash

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null && pwd )"

function fail() {
  echo "____________________________________________________________"
  echo
  echo "Test failed running $1"
  echo
  exit 1
}

function run_test() {
  SKIP_ON_TRAVIS=$1
  shift
  if $IS_TRAVIS
  then
    if $SKIP_ON_TRAVIS
    then
      return
    fi
  fi
  echo
  echo
  echo ">>>>"
  echo ">>>> running $2"
  echo ">>>>"
  echo
  echo
  if [ -d "$DIR/$1" ] 
  then
      cd "$DIR/$1"
      function do_clean() {
        if $SKIP_CLEAN
        then
            echo "Skipping clean"
        else
            bazel clean --expunge --noasync
        fi
      }
      do_clean
      HAVE_TESTS=$(bazel query 'tests(//...)' --color=no 2>&1 >/dev/null | xargs  | grep "INFO: Empty results")
      if [ -z "$HAVE_TESTS" ]
      then
        RUN_TESTS="bazel test //..."
      else
        RUN_TESTS=true
      fi
      ($RUN_TESTS && bazel run "$3") || (do_clean; fail "$2")
  else
      echo "____________________________________________________________"
      echo
      echo "Test failed running $2"
      echo "Directory '$1' does not exist"
      echo "It should be located inside"
      echo "    $DIR"
      echo
      exit 2
  fi
}

if [ -z "$DO_NOT_EXPUNGE" ]
then
  export SKIP_CLEAN=false
else
  export SKIP_CLEAN="$DO_NOT_EXPUNGE"
fi

if [ -z "$TRAVIS" ]
then
  export IS_TRAVIS=false
else
  export IS_TRAVIS="$TRAVIS"
fi

run_test true  "binary"             "Example of a single binary module"                                        "//:binary_example"
run_test false "library"            "Example of a binary module depending on a single internal library module" "//bin:binary_example"
run_test true  "dependencies"       "Example of two internal dependencies"                                     "//bin:binary_example"
run_test true  "single_ed/bin_ws"   "Example of a single external dependency"                                  "//bin:binary_example"
run_test true  "double_ed/bin_ws"   "Example of two external dependencies"                                     "//bin:binary_example"
run_test true  "chain_ed/bin_ws"    "Example of chained External Dependencies"                                 "//bin:binary_example"
run_test true  "diamond_ed/bin_ws"  "Example of external dependencies in diamond shape"                        "//bin:binary_example"
run_test true  "common_ed/bin_ws"   "Example where the binary and a deep library have a common dependency"     "//bin:binary_example"
run_test false "complex_ed/bin_ws"  "Example with a complex graph of external dependencies"                    "//bin:binary_example"

